//
// RestResponsePage.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct RestResponsePage: Codable, JSONEncodable, Hashable {

    /** 总元素数量 */
    public var totalElements: Int64?
    /** 总页数 */
    public var totalPages: Int?
    /** 当前页码 */
    public var number: Int?
    /** 每页大小 */
    public var size: Int?
    /** 是否有下一页 */
    public var hasNext: Bool?
    /** 是否为第一页 */
    public var first: Bool?
    /** 是否为最后一页 */
    public var last: Bool?

    public init(totalElements: Int64? = nil, totalPages: Int? = nil, number: Int? = nil, size: Int? = nil, hasNext: Bool? = nil, first: Bool? = nil, last: Bool? = nil) {
        self.totalElements = totalElements
        self.totalPages = totalPages
        self.number = number
        self.size = size
        self.hasNext = hasNext
        self.first = first
        self.last = last
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case totalElements
        case totalPages
        case number
        case size
        case hasNext
        case first
        case last
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(totalElements, forKey: .totalElements)
        try container.encodeIfPresent(totalPages, forKey: .totalPages)
        try container.encodeIfPresent(number, forKey: .number)
        try container.encodeIfPresent(size, forKey: .size)
        try container.encodeIfPresent(hasNext, forKey: .hasNext)
        try container.encodeIfPresent(first, forKey: .first)
        try container.encodeIfPresent(last, forKey: .last)
    }
}

